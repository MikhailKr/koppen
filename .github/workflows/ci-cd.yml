name: CI/CD

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  REGISTRY: cr.yandex
  REGISTRY_ID: ${{ secrets.YC_REGISTRY_ID }}
  IMAGE_NAME: koppen

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Yandex Cloud Container Registry
        run: |
          echo "${{ secrets.YC_SERVICE_ACCOUNT_KEY_JSON }}" > key.json
          cat key.json | docker login --username json_key --password-stdin cr.yandex
          rm key.json

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ env.REGISTRY }}/${{ env.REGISTRY_ID }}/${{ env.IMAGE_NAME }}:latest

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    
    steps:
      - name: Deploy to VM
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.VM_HOST }}
          username: ${{ secrets.VM_USERNAME }}
          key: ${{ secrets.VM_SSH_KEY }}
          script: |
            # Write service account key and login to registry
            echo "${{ secrets.YC_SERVICE_ACCOUNT_KEY_JSON }}" > key.json
            cat key.json | docker login --username json_key --password-stdin cr.yandex
            rm key.json
            
            # Pull the latest image
            docker pull ${{ env.REGISTRY }}/${{ env.REGISTRY_ID }}/${{ env.IMAGE_NAME }}:latest
            
            # Stop and remove the old container if it exists
            docker compose -f docker-compose.prod.yml down || true
            
            # Start the new container
            docker compose -f docker-compose.prod.yml up -d
