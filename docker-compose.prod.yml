version: '3.8'

services:
  app:
    image: cr.yandex/crpdcq8rd3suju9jjn8k/koppen:latest
    restart: unless-stopped
    ports:
      - "80:8000"
    volumes:
      - sqlite_data:/data/
    environment:
      - DATABASE_URL=sqlite+aiosqlite:////data/fastapi.db
      - ENVIRONMENT=production
      - SMTP_PASSWORD=${SMTP_PASSWORD}
      - SMTP_USER=${SMTP_USER}
    # depends_on:
    #   - db
  redis:
    image: redis:7
    ports:
      - "6379:6379"
    restart: always
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 20
  celery_worker:
    image: cr.yandex/crpdcq8rd3suju9jjn8k/koppen:latest
    command: celery -A celery_app.celery_app worker --loglevel=info
    volumes:
      - sqlite_data:/data/
    depends_on:
      redis:
        condition: service_healthy
    environment:
      - DATABASE_URL=sqlite+aiosqlite:////data/fastapi.db
      - ENVIRONMENT=production
      - SMTP_PASSWORD=${SMTP_PASSWORD}
      - SMTP_USER=${SMTP_USER}

  celery_beat:
    image: cr.yandex/crpdcq8rd3suju9jjn8k/koppen:latest
    command: celery -A celery_app.celery_app beat --loglevel=info
    volumes:
      - sqlite_data:/data/
    depends_on:
      redis:
        condition: service_healthy
    environment:
      - DATABASE_URL=sqlite+aiosqlite:////data/fastapi.db
      - ENVIRONMENT=production
      - SMTP_PASSWORD=${SMTP_PASSWORD}
      - SMTP_USER=${SMTP_USER}
      
  flower:
    image: mher/flower:2.0
    command: 
      - celery
      - flower
      - --broker=redis://redis:6379/0
      - --port=5555
      - --broker_api=http://redis:6379
      - --basic_auth=admin:admin
    ports:
      - "5555:5555"
    depends_on:
      redis:
        condition: service_healthy
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
#     app:
#       build: . 
#       restart: unless-stopped
#       ports:
#         - "80:8000"
#       environment:
#         # - DATABASE_URL=postgresql://postgres:${DB_PASSWORD}@db:5432/koppen
#         - ENVIRONMENT=production
# #   db:
#     image: postgres:16-alpine
#     restart: unless-stopped
#     volumes:
#       - postgres_data:/var/lib/postgresql/data
#     environment:
#       - POSTGRES_USER=postgres
#       - POSTGRES_PASSWORD=${DB_PASSWORD}
#       - POSTGRES_DB=koppen
#     expose:
#       - "5432"

volumes:
  sqlite_data:
